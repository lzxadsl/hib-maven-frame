<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
	<!-- 读取指定位置的db.properties的信息 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:config/db.properties"></property>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>
 
	<!-- 数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		scope="singleton">
		<property name="driverClass">
			<value>${driverClass}</value>
		</property>
		<property name="jdbcUrl">
			<value>${jdbcUrl}</value>
		</property>
		<property name="user">
			<value>${user}</value>
		</property>
		<property name="password">
			<value>${password}</value>
		</property>
		
		<!--连接池中保留的最大连接数。默认值: 15 -->   
        <property name="maxPoolSize" value="20"/>  
        <!-- 连接池中保留的最小连接数，默认为：3-->  
        <property name="minPoolSize" value="2"/>  
        <!-- 初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，默认为3-->  
        <property name="initialPoolSize" value="2"/>  
  
        <!--最大空闲时间，60秒内未使用则连接被丢弃。若为0则永不丢弃。默认值: 0 -->   
        <property name="maxIdleTime" value="60"></property>  
            
        <!-- 当连接池连接耗尽时，客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException，如设为0则无限期等待。单位毫秒。默认: 0 -->   
        <property name="checkoutTimeout" value="3000"/>  
            
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。默认值: 3 -->   
        <property name="acquireIncrement" value="2"/>  
  
        <!--定义在从数据库获取新连接失败后重复尝试的次数。默认值: 30 ；小于等于0表示无限次-->   
        <property name="acquireRetryAttempts" value="0"/>  
  
        <!--重新尝试的时间间隔，默认为：1000毫秒-->   
        <property name="acquireRetryDelay" value="1000" />  
  
        <!--关闭连接时，是否提交未提交的事务，默认为false，即关闭连接，回滚未提交的事务    
        <property name="autoCommitOnClose" value="false"></property>  
		-->
        <!--如果为false，则获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常，但是数据源仍有效保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试获取连接失败后该数据源将申明已断开并永久关闭。默认: false
        <property name="breakAfterAcquireFailure" value="false"></property>  
		-->   
        <!--每60秒检查所有连接池中的空闲连接。默认值: 0，不检查    
        <property name="idleConnectionTestPeriod" value="60"></property>  
        -->
        <!--c3p0全局的PreparedStatements缓存的大小。如果maxStatements与maxStatementsPerConnection均为0，则缓存不生效，只要有一个不为0，则语句的缓存就能生效。如果默认值: 0 
        <property name="maxStatements" value="100"></property>  
        -->  
        <!--maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。默认值: 0 -->   
	</bean>
	
	<!-- 配置SessionFactory -->
 	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
 		<property name="dataSource" ref="dataSource"></property>
 		<property name="hibernateProperties">
 			<props>
 				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL9Dialect</prop>
	            <prop key="hibernate.hbm2ddl.auto">update</prop>
	            <prop key="hibernate.show_sql">true</prop>
	            <prop key="hibernate.format_sql">true</prop>
	            <!--
	            hibernate3.x
	            使用openSession需手工开启事物
	            使用getCurrentSession()时才需要配置如下选项来开启事物，
	            跟spring结合后，则使用 @Transactional来开启事物
	            如果使用的是本地事务（jdbc事务,只支持单库）
				<prop key="hibernate.current_session_context_class">thread</prop>
				如果使用的是全局事务（jta事务，支持多库）
				<prop key="hibernate.current_session_context_class">jta</prop>
				-->
				<!-- hibernate4.x -->
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
				<!--缓存设置改为
				<prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
 				-->
 			</props>
 		</property>
 		<!-- <property name="annotatedClasses">
 			<list>
	            <value>ne.springmvc.entity.User</value>
	        </list>
 		</property> -->
 		
 		<property name="packagesToScan" value="com.lzx..**.*"> </property>
 	</bean>
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" >  
      <property name="dataSource" ref="dataSource"></property>
    </bean>
    <bean id="baseServer" class="com.lzx.basic.server.impl.BaseServer">
    	<property name="username" value="lzx"></property>
    </bean>
    <context:component-scan base-package="com.lzx.">
	    <context:exclude-filter type="regex" expression=".*.*Controller$" />
	</context:component-scan>
</beans>